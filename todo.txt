DONE or MOSTLY DONE
x basic sdl drawing code
x simple input
x framerate independant update
x projectiles and basic entity handling
x refactor into seperate files. game class, player class, etc.
x aabb collision detection
x font for ui and debugging purposes (bitmap font) (in future) refine font renderering by having different spacing per glyph
x player health bar (in future) animate healthbar similar to souls games
x abstract projectile handling to ProjectileManager class
x create base class for enemies to inherit from
x abstract enemy handling to EnemyManager class
x make healthbar more general purpose (kinda still very messy)
x add ability to have moving healthbars e.g. follow enemies
x create base UI object and 'UI Object Manager'
x move responsibility of creating projectiles to the ProjectileManager
x move responsibility of creating enemies to the EnemyManager
x Player and Enemy classes to inherit from a BaseDamagable class
x move responsibility of creating ui objects to the UIManager
x think about how to handle damage and resistances
x better(ish) enemy AI
x add melee weapons
x add dodge roll with iframes
x add burning effect
x better organised debug drawing
x add shadow sprites
x add mouse support

TODO
add "trail" effect for projectiles ------ this will require a kind of particle system, and particle manager
rework player controls -- twinstick shooter style (in progress) -- make sure crosshair can be moved with arrowkeys as well
add crosshair (in progress)
resource manager (in progress)
convert unit vector for velocity to floating point (in progress)
damage can haves a "push" effect (in progress)

// kinda backlog
poison effect
more enemy types/abilities
gamestates -- pausing, menu?
upgrades -- system for adding extra abilities to the player

BACKLOG 
simple particle system (backlog) - try to avoid dealing with any kind of physics or collisions
implement image loading and textures (backlog) NOTE: SDL_image or stb_image or just SDL bitmaps
consider implementing ttf fonts (backlog) NOTE: SDL_ttf or freetype 
controller support (backlog) NOTE: probably will wait for native support of usb devices on WSL2
proper aabb collision response i.e. sliding response
